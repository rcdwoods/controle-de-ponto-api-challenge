plugins {
	id 'org.springframework.boot' version "$springVersion"
	id 'io.spring.dependency-management' version "$springDependencyManagementVersion"
	id "org.hidetake.swagger.generator" version "$swaggerGeneratorVersion" apply false
	id "org.sonarqube" version "$sonarVersion"
	id 'java'
	id 'jacoco'
}

apply from: 'plugins/swagger.gradle'

group = 'br.com.controle-de-ponto'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

sourceSets {
	main {
		java {
			srcDir file("${buildDir}/generated/source/")
			srcDir file("${buildDir}/swagger-code-server/src/main/java")
		}
		resources { srcDir 'src/main/resources' }
	}
	test {
		resources { srcDir 'src/test/resources' }
	}

	main.java.srcDirs += 'src/main/java'
	test.java.srcDirs += 'src/test/java'
}

repositories {
	mavenCentral()
}

ext {
	springFoxArtifacts = [
			'springfox-swagger2',
			'springfox-swagger-ui'
	]
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.flywaydb:flyway-core'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	swaggerCodegen "io.swagger:swagger-codegen-cli:$swaggerCodeGenVersion"
	swaggerUI "org.webjars:swagger-ui:$swaggerUIVersion"

	springFoxArtifacts.each {
		artifact -> implementation "io.springfox:$artifact:$springFoxVersion"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

jacocoTestReport {
	reports {
		xml.enabled true
	}
}

test.finalizedBy jacocoTestReport

tasks.processResources {
	duplicatesStrategy = 'include'
}

tasks.processTestResources {
	duplicatesStrategy = 'include'
}

sonarqube {
	properties {
		property "sonar.projectKey", "rcdwoods_controle-de-ponto-api-challenge"
		property "sonar.organization", "rcdwoods"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

tasks.named('sonarqube').configure {
	dependsOn test
}